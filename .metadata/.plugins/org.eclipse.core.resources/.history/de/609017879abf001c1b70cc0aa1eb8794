package search;

public class BinaryTreeSearch {
	static class Node {
	
		public int data;
		public Node left;
		public Node right;
		
		// 생성자
		public Node(int data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}
	
	public Node root;
	
	public BinaryTreeSearch() {
		this.root = null;
	}
	
	public boolean isBSTOrNot() {
		return isBSTOrNot(this.root, Integer.MIN_VALUE, Integer.MAX_VALUE);
	}
	
	private boolean isBSTOrNot(Node root, int minValue, int maxValue) {
		
		if(root == null) {
			return true;
		}
		
		if (root.data >= minValue && root.data <= maxValue && isBSTOrNot(root.left, minValue, root.data) && isBSTOrNot(root.right, root.data, maxValue)) {
			return true;
		}
		return false;
	}
	
	public static void main(String[] args) {
		
		BinaryTreeSearch bts = new BinaryTreeSearch();
		bts.root = new Node(100);
		bts.root.left = new Node(90);
		bts.root.right = new Node(110);
		bts.root.left.left = new Node(80);
		bts.root.left.right = new Node(95);
		System.out.println(bts.isBSTOrNot());
		
	}
	
	
}
