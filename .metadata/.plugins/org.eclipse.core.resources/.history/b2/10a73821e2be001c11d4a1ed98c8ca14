package sort;

import java.util.Arrays;

public class HeapSort {
	static void swap(int[] a, int i, int j) {
		int temp = a[i];
		a[i] = a[j];
		a[j] = temp;
	}
	
	// 힙 정렬
	static void buildheap(int[] a) {
		int end = a.length - 1;
		for(int i = end/2; i > 0; --i)
			heapify(a, i, end);
	}
	
	// heapify : 특정 노드를 중심으로 하위 트리들이 힙 성질을 만족하게 끔 작업
	static void heapify(int[] a, int k, int end) {
		int left = 2 * k, right = 2 * k + 1;
		int larger;
		// 왼쪽, 오른쪽 자식 노드 둘 다 있는 경우
		if(right <= end) {
			larger = (a[left] > a[right]) ? left : right;
		}
		
	}
	
	
	
}
